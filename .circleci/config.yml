# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.0.0
  eb: circleci/aws-elastic-beanstalk@2.0.1

commands:
  build-image: aws-ecr/build-image
jobs:
  deploy-to-eb:
    docker:
      - image: "cimg/base:stable"
    steps:
      - checkout
      - eb/setup
      - run:
          command: |
            sed -i -e "s;%BUILD_NUM%;$CIRCLE_SHA1;g" ./Dockerrun.aws.json
            eb init $AWS_APPLICATION_NAME -r $AWS_DEFAULT_REGION -p docker
            eb deploy -l $CIRCLE_SHA1
workflows:
  build:
    jobs:
      - aws-ecr/build-and-push-image:
          filters:
            branches:
              only:
                -master
          context:
            - NURBEK_CONTEXT
          account-url: AWS_ECR_URL
          create-repo: false
          dockerfile: Dockerfile
          no-output-timeout: 20m
          path: ./
          region: AWS_DEFAULT_REGION
          repo: test-circleci
          skip-when-tags-exist: false
          tag: $CIRCLE_SHA1
#          filters:
#            branches:
#              only:
#                - master
      - deploy-to-eb:
          context:
            - NURBEK_CONTEXT
          requires:
            - aws-ecr/build-and-push-image





#version: 2.1
#
#orbs:
#  eb: circleci/aws-elastic-beanstalk@2.0.1
#
#executors:
#  docker-publisher:
#    environment:
#      IMAGE_NAME: nurba1713/cicleci-example
#    docker:
#      - image: circleci/buildpack-deps:stretch
#jobs:
#  build-image:
#    executor: docker-publisher
#    steps:
#      - checkout
#      - setup_remote_docker
#      - run: |
#          docker build -t $IMAGE_NAME:0.1.$CIRCLE_BUILD_NUM .
#  build-image-and-push-to-dockerhub:
#    executor: docker-publisher
#    steps:
#      - checkout
#      - setup_remote_docker
#      - run: |
#          TAG=0.1.$CIRCLE_BUILD_NUM
#          docker build -t $IMAGE_NAME:$TAG .
#          echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USERNAME --password-stdin
#          docker push  $IMAGE_NAME:$TAG
#  deploy-to-aws-elastic-beanstalk:
#    docker:
#      - image: 'cimg/base:stable'
#    steps:
#      - checkout
#      - eb/setup
#      - run:
#          name: "deploy using eb cli"
#          command: |
#            sed -i -e "s;%NURBA%;$CIRCLE_BUILD_NUM;g" ./Dockerrun.aws.json
#            eb init $AWS_APPLICATION_NAME -r $AWS_DEFAULT_REGION -p docker
#            eb deploy
#  build-and-test:
#    docker:
#      - image: openjdk:17
#    steps:
#      - checkout
#      -  maven/maven_command:
#           - ./mvnw clean install
#      - run:
#          name: Run prod
#          command: ./mvnw clean install
#workflows:
#  build-push-workflow:
#    jobs:
#      - build-and-test:
#          filters:
#            branches:
#              only: master
#      - build-image:
#          filters:
#            branches:
#              only: master
#      - build-image-and-push-to-dockerhub:
#          context:
#            - NURBEK_CONTEXT
#          requires:
#            - build-image
#          filters:
#            branches:
#              only: master
#      - deploy-to-aws-elastic-beanstalk:
#          context:
#            - NURBEK_CONTEXT
#          filters:
#            branches:
#              only: master
#          requires:
#            - build-image
#
#
